{"version":3,"sources":["components/Task.js","components/Tasks.js","components/TaskForm.js","components/Posts.js","App.js","index.js"],"names":["Task","fontSize","padding","border","color","this","props","task","done","textDecoration","style","StyleCompleted","title","description","id","type","onChange","checkDone","bind","boton","onClick","deleteTask","Component","borderRadius","backgroundColor","width","cursor","Tasks","tasks","map","key","TaskForm","state","onSubmit","e","console","log","addTask","preventDefault","setState","target","name","value","placeholder","Posts","posts","fetch","res","json","data","post","titke","body","App","newTask","length","newTasks","filter","ReactDOM","render","document","getElementById"],"mappings":"uOAIMA,E,+KAEE,MAAM,CACFC,SAAU,OACVC,QAAS,YACTC,OAAQ,OACRC,MAAOC,KAAKC,MAAMC,KAAKC,KAAO,MAAQ,QACtCC,eAAgBJ,KAAKC,MAAMC,KAAKC,KAAO,eAAiB,U,+BAKtD,IACCD,EAAQF,KAAKC,MAAbC,KAEP,OAAO,yBAAKG,MAAOL,KAAKM,kBACfJ,EAAKK,MACLL,EAAKM,YACLN,EAAKC,KACLD,EAAKO,GACN,2BAAOC,KAAM,WAAWC,SAAWX,KAAKC,MAAMW,UAAUC,KAAKb,KAAME,EAAKO,MACxE,4BAAQJ,MAAQS,EAAOC,QAAUf,KAAKC,MAAMe,WAAWH,KAAKb,KAAME,EAAKO,KAAvE,c,GArBGQ,aA0BbH,EAAQ,CACVI,aAAc,MACdC,gBAAiB,SACjBpB,MAAO,QACPqB,MAAO,QACPC,OAAQ,WAQG1B,ICrBA2B,E,uKAhBF,IAAD,OACJ,OAAOtB,KAAKC,MAAMsB,MAAMC,KAAI,SAAAtB,GAAI,OAC5B,kBAAC,EAAD,CACIA,KAAOA,EACPuB,IAAMvB,EAAKO,GACXO,WAAa,EAAKf,MAAMe,WACxBJ,UAAY,EAAKX,MAAMW,mB,GAPnBK,a,OCHCS,E,4MACjBC,MAAO,CACHpB,MAAO,GACPC,YAAa,I,EAEjBoB,SAAW,SAAAC,GACPC,QAAQC,IAAI,EAAKJ,OACjB,EAAK1B,MAAM+B,QAAQ,EAAKL,MAAMpB,MAAO,EAAKoB,MAAMnB,aAChDqB,EAAEI,kB,EAENtB,SAAW,SAAAkB,GACP,EAAKK,SAAL,eACKL,EAAEM,OAAOC,KAAQP,EAAEM,OAAOE,S,uDAI/B,OAAS,0BAAMT,SAAW5B,KAAK4B,UAC3B,2BACIlB,KAAM,OACN0B,KAAM,QACNE,YAAa,eACb3B,SAAWX,KAAKW,SAChB0B,MAAQrC,KAAK2B,MAAMpB,QACvB,6BACA,6BACA,8BACI6B,KAAM,cACNE,YAAa,sBACb3B,SAAWX,KAAKW,SAChB0B,MAAQrC,KAAK2B,MAAMnB,cACvB,2BAAOE,KAAM,gB,GA9BaO,a,wBCAjBsB,E,4MACjBZ,MAAO,CACHa,MAAO,I,oMAIUC,MAAM,8C,cAAjBC,E,gBACYA,EAAIC,O,OAAhBC,E,OACN5C,KAAKkC,SAAS,CAACM,MAAMI,I,qIAIrB,OACI,6BACI,qCACI5C,KAAK2B,MAAMa,MAAMhB,KAAI,SAAAqB,GACjB,OAAO,yBAAKpB,IAAMoB,EAAKpC,IACf,gCAAMoC,EAAKC,OACX,+BAAKD,EAAKE,KAAV,c,GAlBG9B,aCkDpB+B,E,4MAzCbrB,MAAO,CAACJ,MAAOA,G,EAEfS,QAAS,SAACzB,EAAOC,GACf,IAAMyC,EAAS,CACb1C,MAAOA,EACPC,YAAaA,EACbC,GAAI,EAAKkB,MAAMJ,MAAM2B,QAEvB,EAAKhB,SAAS,CACZX,MAAM,GAAD,mBAAM,EAAKI,MAAMJ,OAAjB,CAAwB0B,O,EAIjCjC,WAAY,SAACP,GACX,IAAM0C,EAAU,EAAKxB,MAAMJ,MAAM6B,QAAO,SAAAlD,GAAI,OAAIA,EAAKO,KAAOA,KAC5D,EAAKyB,SAAS,CAACX,MAAO4B,K,EAIxBvC,UAAY,SAACH,GACX,IAAM0C,EAAU,EAAKxB,MAAMJ,MAAMC,KAAI,SAAAtB,GAInC,OAHGA,EAAKO,KAAOA,IACbP,EAAKC,MAAQD,EAAKC,MAEbD,KAET,EAAKgC,SAAS,CAACX,MAAO4B,K,uDAMtB,OAAS,6BACP,kBAAC,EAAD,CAAUnB,QAAUhC,KAAKgC,UACzB,kBAAC,EAAD,CAAOT,MAAQvB,KAAK2B,MAAMJ,MAAOP,WAAahB,KAAKgB,WAAYJ,UAAYZ,KAAKY,YAChF,kBAAC,EAAD,W,GApCYK,aCNlBoC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.2bc975eb.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nclass Task extends Component{\r\n    StyleCompleted(){\r\n        return{\r\n            fontSize: \"20px\",\r\n            padding: \"10px 15px\",\r\n            border: \"none\",\r\n            color: this.props.task.done ? \"red\" : \"green\",\r\n            textDecoration: this.props.task.done ? \"line-through\" : \"none\"\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {task} = this.props;\r\n\r\n        return <div style={this.StyleCompleted()}>\r\n                {task.title} \r\n                {task.description} \r\n                {task.done} \r\n                {task.id}\r\n                <input type= \"checkbox\" onChange= {this.props.checkDone.bind(this, task.id)}  />\r\n                <button style= {boton} onClick= {this.props.deleteTask.bind(this, task.id)} >Boton</button>\r\n                </div>\r\n    }\r\n}\r\n\r\nconst boton = {\r\n    borderRadius: \"15%\",\r\n    backgroundColor: \"orange\",\r\n    color: \"black\",\r\n    width: \"130px\",\r\n    cursor: \"pointer\"\r\n}\r\n\r\nTask.propTypes= {\r\n    task: propTypes.object.isRequired\r\n}\r\n\r\n\r\nexport default Task;","import React, {Component} from 'react';\r\nimport Task from './Task';\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nclass Tasks extends Component{\r\n    render(){\r\n        return this.props.tasks.map(task => \r\n            <Task\r\n                task= {task}\r\n                key= {task.id}\r\n                deleteTask= {this.props.deleteTask}\r\n                checkDone= {this.props.checkDone}    \r\n            />);\r\n    }\r\n}\r\n\r\nTasks.propTypes= {\r\ntasks: propTypes.array.isRequired\r\n}\r\n\r\n\r\nexport default Tasks;","import React, {Component} from 'react';\r\n\r\nexport default class TaskForm extends Component{\r\n    state= {\r\n        title: '',\r\n        description: ''\r\n    }\r\n    onSubmit = e => {\r\n        console.log(this.state)\r\n        this.props.addTask(this.state.title, this.state.description)\r\n        e.preventDefault();\r\n    }\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return ( <form onSubmit= {this.onSubmit}>\r\n            <input \r\n                type= \"text\"\r\n                name= \"title\"\r\n                placeholder= \"write a task\"\r\n                onChange= {this.onChange}\r\n                value= {this.state.title} />\r\n            <br/>\r\n            <br/>\r\n            <textarea \r\n                name= \"description\"\r\n                placeholder= \"Write a description\"\r\n                onChange= {this.onChange}\r\n                value= {this.state.description} ></textarea>\r\n            <input type= \"submit\" />\r\n        </form>)\r\n    }\r\n\r\n\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Posts extends Component {\r\n    state= {\r\n        posts: []\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const res= await fetch('https://jsonplaceholder.typicode.com/posts')\r\n        const data= await res.json();\r\n        this.setState({posts:data})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Posts</h1>{\r\n                    this.state.posts.map(post => {\r\n                        return <div key= {post.id}>\r\n                                <h1> {post.titke}</h1>\r\n                                <p> {post.body} </p>\r\n                                </div>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\n\n\n//Componentes\nimport tasks from './sample/tasks.json';\nimport Tasks from './components/Tasks';\nimport TaskForm from './components/TaskForm';\nimport Posts from './components/Posts';\n\n\nclass App extends Component {\n  state= {tasks: tasks}\n\n  addTask= (title, description) => {\n    const newTask= {\n      title: title,\n      description: description,\n      id: this.state.tasks.length\n    }\n    this.setState({\n      tasks: [...this.state.tasks, newTask]\n    })\n  }\n\n  deleteTask= (id) => {\n    const newTasks= this.state.tasks.filter(task => task.id !== id);\n    this.setState({tasks: newTasks})\n  }\n\n\n  checkDone = (id) => {\n    const newTasks= this.state.tasks.map(task => {\n      if(task.id === id){\n        task.done = !task.done\n      }\n      return task;\n    });\n    this.setState({tasks: newTasks})\n  }\n\n\n\n  render(){\n    return   <div> \n      <TaskForm addTask= {this.addTask}/>\n      <Tasks tasks= {this.state.tasks} deleteTask= {this.deleteTask} checkDone= {this.checkDone} /> \n      <Posts/>\n    </div>  \n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}